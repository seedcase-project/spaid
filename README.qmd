---
format:
  gfm:
    toc: true
engine: knitr
---

<!-- Don't edit README.md directly, edit README.qmd and render to Markdown via `just build-readme` -->

# spaid: Seedcase Project aid --- a toolkit for developing Seedcase

## Installation

Many of these commands depend on the `gh` CLI tool, so you will need to
install that first. See the [GitHub CLI](https://cli.github.com/) for
installation instructions.

Then, while in your Terminal, `cd` to a directory you want to store this
repository and clone it with:

``` bash
gh repo clone seedcase-project/spaid
```

Then, `cd` into the newly created `spaid` folder and run:

``` bash
just install
```

After that is finished, check to make sure that the `~/.local/bin`
folder is on your execution path (so your Terminal can find the
installed commands) by running the below code, which should give the
output below:

```{bash}
echo $PATH | grep -o "\.local/bin" | uniq
```

Then you don't need to do anything else. If you don't see that folder,
find your `~/.zshrc` , open it in a text editor, and add this line to
that file:

``` bash
export PATH=$HOME/.local/bin:$PATH
```

We use [zsh](https://github.com/ohmyzsh/ohmyzsh/wiki/Installing-ZSH) as
the default shell because it is the default on MacOS and is more
powerful than the default Bash shell on many Linux distributions.

Close your terminal and re-run the `echo` code above to check that it
worked. If it worked and you now see the folder, you have installed the
spaid helper functions!

## Commands

Many commands are designed to be used with `xargs` to process multiple
commands at once. A note is given below the relevant commands for how.

### Pull requests

#### `spaid_pr_list`

```{bash}
#| output: asis
spaid_pr_list -h
```

#### `spaid_pr_merge_rebase`

```{bash}
#| output: asis
spaid_pr_merge_rebase -h
```

#### `spaid_pr_merge_chores`

```{bash}
#| output: asis
spaid_pr_merge_chores -h
```

### GitHub organization management (invitations, teams)

#### `spaid_gh_org_invite`

```{bash}
#| output: asis
spaid_gh_org_invite -h
```

#### `spaid_gh_teams_list`

```{bash}
#| output: asis
spaid_gh_teams_list -h
```

#### `spaid_gh_teams_invite`

```{bash}
#| output: asis
spaid_gh_teams_invite -h
```

### Rulesets

#### `spaid_gh_ruleset_list`

```{bash}
#| output: asis
spaid_gh_ruleset_list -h
```

#### `spaid_gh_ruleset_delete`

```{bash}
#| output: asis
spaid_gh_ruleset_delete -h
```

#### `spaid_gh_ruleset_basic_protect_main`

```{bash}
#| output: asis
spaid_gh_ruleset_basic_protect_main -h
```

Can do multiple repos at once with `xargs`:

``` bash
spaid_gh_ruleset_list seedcase-project | xargs -n 1 spaid_gh_ruleset_basic_protect_main
```

### GitHub repository management

#### `spaid_gh_repo_list`

```{bash}
#| output: asis
spaid_gh_repo_list -h
```

#### `spaid_gh_set_repo_settings`

```{bash}
#| output: asis
spaid_gh_set_repo_settings -h
```

Can do multiple repos at once with `xargs`:

``` bash
spaid_gh_repo_list seedcase-project | xargs -n 1 spaid_gh_set_repo_settings
```

#### `spaid_gh_create_repo_from_local`

```{bash}
#| output: asis
spaid_gh_create_repo_from_local -h
```
